// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: workspace.sql

package repository

import (
	"context"
)

const addWorkspace = `-- name: AddWorkspace :exec
INSERT INTO workspaces (name, password)
VALUES (?, ?)
`

type AddWorkspaceParams struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

func (q *Queries) AddWorkspace(ctx context.Context, arg AddWorkspaceParams) error {
	_, err := q.db.ExecContext(ctx, addWorkspace, arg.Name, arg.Password)
	return err
}

const fetchWorkspace = `-- name: FetchWorkspace :one
SELECT id, name, password 
FROM workspaces
WHERE name = ?
LIMIT 1
`

type FetchWorkspaceRow struct {
	ID       int64  `json:"id"`
	Name     string `json:"name"`
	Password string `json:"password"`
}

func (q *Queries) FetchWorkspace(ctx context.Context, name string) (FetchWorkspaceRow, error) {
	row := q.db.QueryRowContext(ctx, fetchWorkspace, name)
	var i FetchWorkspaceRow
	err := row.Scan(&i.ID, &i.Name, &i.Password)
	return i, err
}
